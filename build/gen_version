#!/bin/bash

EDITION=${1:-community}
BUILD_OS=${2:-unknown}
ARCH=${3:-unknown}
EE_SHA=$4

FEATURES=""
VERSION="$(git describe --abbrev=7)"
CE_SHA="$(git rev-parse HEAD)"

telemetry() {
    # Check if AEROSPIKE_TELEMETRY is set to FALSE, if so, user has opted out.
    if [ "${AEROSPIKE_TELEMETRY}" = "FALSE" ]; then
      return 0
    fi

    # Check if curl is on the machine. Silently abort if no curl is found
    if ! command -v curl >/dev/null 2>&1; then
      return 0
    fi

    # Construct the POST request
    local TELEMETRY_VERSION="1"
    local DATA="arch=${ARCH}&build_os=${BUILD_OS}&version=${VERSION}&edition=${EDITION}&ce_sha=${CE_SHA}&ee_sha=${EE_SHA}"
    local AEROSPIKE_BASE_URL="https://build.aerospike.com/v${TELEMETRY_VERSION}/build/asdb"

    curl --connect-timeout 3 -X POST "${AEROSPIKE_BASE_URL}?${DATA}"
}

telemetry &> /dev/null

if [ $EDITION = enterprise -o $EDITION = federal ]; then
    FEATURES=";xdr"
fi

echo "////
//// AUTOMATICALLY GENERATED BY BUILD SYSTEM
////
const char aerospike_build_id[] = \"${VERSION}\";
const char aerospike_build_time[] = \"$(date)\";
const char aerospike_build_type[] = \"Aerospike ${EDITION^} Edition\";
const char aerospike_build_os[] = \"${BUILD_OS}\";
const char aerospike_build_arch[] = \"${ARCH}\";
const char aerospike_build_sha[] = \"${CE_SHA}\";
const char aerospike_build_ee_sha[] = \"${EE_SHA}\";
const char aerospike_build_features[] = \"${FEATURES}\";
"
